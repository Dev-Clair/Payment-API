<?php

declare(strict_types=1);

namespace Payment_API\Entity;

use DateTimeImmutable;
use Payment_API\Interface\EntityInterface;
use Payment_API\Enums\PaymentStatus;
use Payment_API\Enums\PaymentType;
use Doctrine\ORM\Mapping as ORM;

#[ORM\Entity]
#[ORM\Table(name: 'payments')]
class PaymentsEntity implements EntityInterface
{
    #[ORM\Id]
    #[ORM\GeneratedValue]
    #[ORM\Column(type: 'integer')]
    private int $id; // Payment ID (Autogenerated)

    #[ORM\Column(type: 'string', nullable: false, length: 150)]
    private string $upid; // Unique Payment Identifier

    #[ORM\Column(type: 'decimal', precision: 10, scale: 2)]
    private float $amount; // Total Amount Paid

    #[ORM\Column(type: 'datetime', nullable: false, updatable: true)]
    private DateTimeImmutable $created_at; // Date and Time of Payment

    #[ORM\Column(type: 'string', nullable: false, columnDefinition: 'ENUM("paid", "pending", "failed")')]
    private PaymentStatus $payment_status; // Payment Status

    #[ORM\Column(type: 'string', nullable: false, columnDefinition: 'ENUM("credit", "debit")')]
    private PaymentType $payment_type; // Payment Type

    public function __construct()
    {
        $this->amount = 0.00;
        $this->created_at = new DateTimeImmutable('now');
    }

    public function getID(): int
    {
        return $this->id;
    }

    public function getUPID(): string
    {
        return $this->upid;
    }

    public function setUPID(string $upid): void
    {
        $this->upid = $upid;
    }

    public function getAmount(): float
    {
        return $this->amount;
    }

    public function setAmount(float $amount): void
    {
        $this->amount = $amount;
    }

    public function getDateTime(): DateTimeImmutable
    {
        return $this->created_at;
    }

    public function getPaymentStatus(): PaymentStatus
    {
        return $this->payment_status;
    }

    public function setPaymentStatus(PaymentStatus $payment_status): void
    {
        $this->payment_status = $payment_status;
    }

    public function getPaymentType(): PaymentType
    {
        return $this->payment_type;
    }

    public function setPaymentType(PaymentType $payment_type): void
    {
        $this->payment_type = $payment_type;
    }
}
